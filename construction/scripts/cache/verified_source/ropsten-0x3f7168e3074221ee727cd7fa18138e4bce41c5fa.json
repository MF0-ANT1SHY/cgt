{"status": "1", "message": "OK", "result": [{"SourceCode": "/*\r\n/// @title Test Calculator\r\n/// @author MarkCTest\r\n/// @notice Made the add function payable\r\n/// @param C is used for all return values\r\n*/\r\n\r\npragma solidity ^0.4.18;\r\n\r\ncontract SimpleMathTest003 {\r\n    \r\n    uint calculationFee = 0.001 ether;\r\n\r\n  modifier payForResults() {\r\n      require(msg.value == calculationFee);\r\n    _;\r\n  }\r\n  \r\n\r\n  function add(uint a, uint b) public payForResults payable returns(uint) {\r\n    uint c = a + b;\r\n    return c;\r\n  }\r\n  \r\n  function mul(uint a, uint b) public pure returns (uint) {\r\n    uint c = a * b;\r\n    return c;\r\n  }\r\n  \r\n  function div(uint a, uint b) public pure returns(uint) {\r\n    uint c = a / b;\r\n    return c;\r\n    // @dev Doesn't address divide by zero errors\r\n  }\r\n  \r\n  function sub(uint a, uint b) public pure returns(uint) {\r\n    uint c = a - b;\r\n    return c;\r\n    // @dev Doesn't address if we get a negative number\r\n  }\r\n\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"add\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"div\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"sub\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"a\",\"type\":\"uint256\"},{\"name\":\"b\",\"type\":\"uint256\"}],\"name\":\"mul\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"}]", "ContractName": "SimpleMathTest003", "CompilerVersion": "v0.4.25+commit.59dbf8f1", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://da77610d3238e9ce4f6ddc9f297dc5fc774d4035b9691233b36fd0a4a39183a1"}]}