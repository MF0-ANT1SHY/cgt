{"status": "1", "message": "OK", "result": [{"SourceCode": "{{\r\n  \"language\": \"Solidity\",\r\n  \"sources\": {\r\n    \"zhou/SWC-120.sol\": {\r\n      \"content\": \"pragma solidity ^0.4.25;\\n\\n// Based on TheRun contract deployed at 0xcac337492149bDB66b088bf5914beDfBf78cCC18.\\ncontract RandomNumberGenerator {\\n  uint256 private salt =  block.timestamp;\\n\\n  function random(uint max) view private returns (uint256 result) {\\n    // Get the best seed for randomness\\n    uint256 x = salt * 100 / max;\\n    uint256 y = salt * block.number / (salt % 5);\\n    uint256 seed = block.number / 3 + (salt % 300) + y;\\n    uint256 h = uint256(blockhash(seed));\\n    // Random number between 1 and max\\n    return uint256((h / x)) % max + 1;\\n  }\\n}\"\r\n    }\r\n  },\r\n  \"settings\": {\r\n    \"optimizer\": {\r\n      \"enabled\": false,\r\n      \"runs\": 200\r\n    },\r\n    \"outputSelection\": {\r\n      \"*\": {\r\n        \"*\": [\r\n          \"evm.bytecode\",\r\n          \"evm.deployedBytecode\",\r\n          \"devdoc\",\r\n          \"userdoc\",\r\n          \"metadata\",\r\n          \"abi\"\r\n        ]\r\n      }\r\n    }\r\n  }\r\n}}", "ABI": "[]", "ContractName": "RandomNumberGenerator", "CompilerVersion": "v0.4.26+commit.4563c3fc", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": ""}]}